package com.yangli907.newandroid;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.List;

import android.app.Activity;
import android.os.Bundle;
import android.view.Menu;
public class MainActivity extends Activity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        //String urlString = "http://www.simsimi.com/func/req?test";
        String urlString = "http://www.simsimi.com/talk.htm";
        List<String> cookies = getConnCookie(urlString);
        try {
			URL url = new URL("http://www.simsimi.com/func/req?hello&lc=zh");
			
			HttpURLConnection con = (HttpURLConnection) url.openConnection();
			con.addRequestProperty("X-Forwarded-For", "10.2.0.124");
			con.addRequestProperty("Cookie", cookies.get(0));
			BufferedReader response = readStream(con.getInputStream());
		} catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    }
    
    private List<String> getConnCookie(String urlString){
    	try {
      	  URL url = new URL(urlString);
      	  HttpURLConnection con = (HttpURLConnection) url
      	    .openConnection();
      	  List<String> cookies = con.getHeaderFields().get("Set-Cookie");
      	  //readStream(con.getInputStream());
      	  return cookies;
      	  } catch (Exception e) {
      	  e.printStackTrace();
      	  return null;
      	}
    }
    private BufferedReader readStream(InputStream in) {
    	  BufferedReader reader = null;
/*    	  try {
    	    reader = new BufferedReader(new InputStreamReader(in));
    	    String line = "";
    	    while ((line = reader.readLine()) != null) {
    	      System.out.println(line);
    	    }
    	  } catch (IOException e) {
    	    e.printStackTrace();
    	  } finally {
    	    if (reader != null) {
    	      try {
    	        reader.close();
    	      } catch (IOException e) {
    	        e.printStackTrace();
    	        }
    	    }
    	  }    	  
*/    	  
    	  reader = new BufferedReader(new InputStreamReader(in));
    	  return reader;
    	} 
    
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }
    
}
